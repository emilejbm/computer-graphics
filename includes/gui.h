// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef gui_h
#define gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Return_Button.H>

class GUI {
public:
  GUI();
  Fl_Double_Window *uiw;
private:
  inline void cb_DBG_i(Fl_Button*, void*);
  static void cb_DBG(Fl_Button*, void*);
  inline void cb_PlayButton_i(Fl_Return_Button*, void*);
  static void cb_PlayButton(Fl_Return_Button*, void*);

  //new
  inline void cb_SM1_i(Fl_Button*, void*);
  static void cb_SM1(Fl_Button*, void*);
  inline void cb_SM2_i(Fl_Button*, void*);
  static void cb_SM2(Fl_Button*, void*);
  inline void cb_SM3_i(Fl_Button*, void*);
  static void cb_SM3(Fl_Button*, void*);
  inline void cb_AmbPlus_i(Fl_Button*, void*);
  static void cb_AmbPlus(Fl_Button*, void*);
  inline void cb_AmbMinus_i(Fl_Button*, void*);
  static void cb_AmbMinus(Fl_Button*, void*);
  inline void cb_SpecPlus_i(Fl_Button*, void*);
  static void cb_SpecPlus(Fl_Button*, void*);
  inline void cb_SpecMinus_i(Fl_Button*, void*);
  static void cb_SpecMinus(Fl_Button*, void*);


  inline void cb_Up_i(Fl_Button*, void*);
  static void cb_Up(Fl_Button*, void*);
  inline void cb_Down_i(Fl_Button*, void*);
  static void cb_Down(Fl_Button*, void*);
  inline void cb_Left_i(Fl_Button*, void*);
  static void cb_Left(Fl_Button*, void*);
  inline void cb_Right_i(Fl_Button*, void*);
  static void cb_Right(Fl_Button*, void*);
  inline void cb_Front_i(Fl_Button*, void*);
  static void cb_Front(Fl_Button*, void*);
  inline void cb_Back_i(Fl_Button*, void*);
  static void cb_Back(Fl_Button*, void*);
  inline void cb_ZPlus_i(Fl_Button*, void*);
  static void cb_ZPlus(Fl_Button*, void*);
  inline void cb_ZMinus_i(Fl_Button*, void*);
  static void cb_ZMinus(Fl_Button*, void*);
  inline void cb_PanPlus_i(Fl_Button*, void*);
  static void cb_PanPlus(Fl_Button*, void*);
  inline void cb_PanMinus_i(Fl_Button*, void*);
  static void cb_PanMinus(Fl_Button*, void*);
  inline void cb_TiltPlus_i(Fl_Button*, void*);
  static void cb_TiltPlus(Fl_Button*, void*);
  inline void cb_TiltMinus_i(Fl_Button*, void*);
  static void cb_TiltMinus(Fl_Button*, void*);
  inline void cb_RollPlus_i(Fl_Button*, void*);
  static void cb_RollPlus(Fl_Button*, void*);
  inline void cb_RollMinus_i(Fl_Button*, void*);
  static void cb_RollMinus(Fl_Button*, void*);
public:
  void show();
  void DBG_cb();
  void Play_cb();

  //shading
  void SM1_cb();
  void SM2_cb();
  void SM3_cb();
  void AmbPlus_cb();
  void AmbMinus_cb();
  void SpecPlus_cb();
  void SpecMinus_cb();


  //translations
  void Left_cb();
  void Right_cb();
  void Up_cb();
  void Down_cb();
  void Forward_cb();
  void Backward_cb();
  //zoom
  void ZPlus_cb();
  void ZMinus_cb();
  //rotations
  void TiltPlus_cb();
  void TiltMinus_cb();
  void PanPlus_cb();
  void PanMinus_cb();
  void RollPlus_cb();
  void RollMinus_cb();
};
#endif
